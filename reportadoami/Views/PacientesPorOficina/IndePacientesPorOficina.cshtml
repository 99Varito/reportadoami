
@model List<reportadoami.Models.ViewModels.PacientesPorOficinaViewModel>
@{
    ViewBag.Title = "IndePacientesPorOficina";
}
<h2>DashBoard</h2>

@using (Html.BeginForm("IndePacientesPorOficina", "PacientesPorOficinaController", FormMethod.Get))
{<!-- HTML -->
    <h4>Ultimos </h4>
    <input />
    <div class="container-sm">
        <canvas id="graficoPacientesPorOficina"></canvas>

    </div>

}
<!-- JS -->

<div class="container-sm">
    @Html.Partial("Details")
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>

    <script>
    // Obtener los datos desde la vista (en formato JSON)
    var data = @Html.Raw(Json.Encode(Model));

    // Obtener los nombres de las oficinas y la cantidad de pacientes como dos arrays separados
    var oficinas = [];
    var pacientes = [];
    for (var i = 0; i < data.length; i++) {
        oficinas.push(data[i].OFNa);
        pacientes.push(data[i].TotalPacientes);
    }

    // Configuración del gráfico
    var ctx = document.getElementById('graficoPacientesPorOficina').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: oficinas,
            datasets: [{
                label: 'Cantidad de pacientes',
                data: pacientes,
                backgroundColor: ' #03A696',
                borderColor: ' #03A696',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    </script>
